\subsection{Materialized View Configuration Events trigger structure}\label{subsec_trigger_structure_mv_config_ev}


Change on base table (cabinet, lower house, upper house, presidential elections, or veto points) triggers refresh of affected row in configuration events materialised view


On update of columns having the configuration identifier or start date values, call function mv_config_ev_*_ut(), where * is a placeholder for the table name.
This function will perform one call of function mv_config_ev_refresh_row() with old country identifier and start date values (note that start date refers to the configuration start date at the level of the base table, e.g. cab_sdate or prs_sdate), and another call with new (i.e., updated) country identifier and configuration start date values for each row that is updated.

On insert to table call function mv_config_ev_*_it().
This will perform a call of mv_config_ev_refresh_row() with newly inserted country identifier and configuration start date values for each row that is inserted.

On delete on table call function mv_config_ev_*_dt().
This will perform a call of mv_config_ev_refresh_row() with the country identifier and start date values of the row that is removed for each row that is deleted.

These event triggers are defined on each of the base tables and named mv_config_ev_update, mv_config_ev_insert, and mv_config_ev_delete, respectively. 

Function mv_config_ev_refresh_row()



Function \texttt{\footnotesize mv\_config\_ev\_refresh\_row(\#$_{ctr}$, \#$_{date}$)}\label{fun_mv_config_ev_refresh}, which performs a refresh of rows in materialized view Configuration Events for a given combination of country identifier and start date:

\lstinputlisting[%caption={Code to create row-refresh function on materialized view Configuration Events.},
language=postgreSQL]%
{../SQL-codes/fun_mv_config_ev_refresh_row.sql}
% 
% 
% Rows in mv_configuration_events are uniquely identified by primary key (ctr_id, sdate).
% Data in mv_configuration_events comes from tables that are mentioned in the underly the definition of view_configuration events (i.e., tables Cabinet, Lower House, Upper House, Presidential Election, and Veto Points)-
% 
% In order to execute a refresh of rows of mv_configuration_events (triggered by insert/delete/update actions on base tables), 
% 	(i) all triggers on MV are disabled, 
% 	(ii) row identified by ctr_id and sdate (defined as arguments to function) is deletedfrom MV,
% 	(iii) row identified by ctr_id and sdate (defined as arguments to function) is inserted to MV from underlying view view_configuration_events,
% 	(iv) all triggers on MV are enabled, 
% 	(v) columns containing corresponding IDs of institions in mv_configuration_events are updated in order to trigger trg_mv_config_ev_correspond_ids, and
% 	(vi) column containing end date of given configuration is updated where date is younger then recently refreshed row (for odler start and end dates will not be affected by refresh) 
%   

The function performs the following procedures:
\begin{itemize}
\item[(1)]{disable all triggers implemented on materialized view Configuration Events;}
\item[(2)]{delete the row from materialized view Configuration Events that is identified by country identifier and start date;}
\item[(3)]{insert the respective configuration information (country identifier and start date) from view  Configuration Events into materialized view Configuration Events;}
\item[(4)]{enable all triggers implemented on materialized view Configuration Events; and}
\item[(5)]{execute function \texttt{\footnotesize update\_mv\_config\_events()}, which is defined as:
